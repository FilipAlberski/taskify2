generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Test {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  username  String   @unique
  password  String
  roles     UserRole[]
  projects  Project[]
  tasks     Task[]
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserRole {
  id   Int    @id @default(autoincrement())
  name String @unique
  users User[] 
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String
  createdBy User     @relation(fields: [createdById], references: [id])
  createdById Int
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id        Int      @id @default(autoincrement())
  name      String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  createdBy User     @relation(fields: [createdById], references: [id])
  createdById Int
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    Int
  createdBy User     @relation(fields: [createdById], references: [id])
  createdById Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
